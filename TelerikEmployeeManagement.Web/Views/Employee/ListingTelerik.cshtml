@{
    ViewData["Title"] = "ListingTelerik";
}

@using Newtonsoft.Json;
@using TelerikEmployeeManagement.Models.Enums;
@using TelerikEmployeeManagement.Models.Models;
@using TelerikEmployeeManagement.Web.ViewModels;

@model EmployeeViewModel

@*<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
    Add Employee
</button>*@
<style>
    /* Hide the EmployeeId field in the edit form */
    .k-edit-form-container [name="EmployeeId"] {
        display: none;
    }

    .k-edit-form-container [for="EmployeeId"] {
        display: none;
    }

</style>
<br />

@(
Html.Kendo().Grid<Employee>()
        .Name("grid")
        .Editable(e => e.Mode(GridEditMode.PopUp))
        .HtmlAttributes(new { id = "iGrid" })
        .ToolBar(toolbar => toolbar.Create())
        .DataSource(dataSource => dataSource
            .Ajax()
            .Model(model =>
            {
                model.Id(p => p.EmployeeId);
            })
            .Read("Employee_Read", "Employee")
            .Update("Editing_Update", "Employee")
            .Create("Editing_Update", "Employee")
            .Destroy("DeleteEmployeeTelerik", "Employee")
         )
        .Columns(columns =>
        {
            columns.Bound(f => f.EmployeeId).Hidden(true);
            columns.Bound(f => f.DepartmentId).Hidden(true);
            columns.Bound(f => f.FirstName);
            columns.Bound(f => f.LastName);
            columns.Bound(f => f.Email);
            columns.Bound(f => f.PhotoPath).ClientTemplate("<img src='/" + "#=PhotoPath#' alt='#=FirstName #' Title='#=FirstName #' height='62' width='62'/>");
            columns.Command(commands =>
            {
                commands.Edit();
                commands.Destroy();
            }).Title("Actions").Width(200);
        })
        .Pageable()
        .Sortable()
        .Filterable()
    )


<!-- Button trigger modal -->
<!-- Add Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Add Employee</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("ListingTelerik", "Employee", FormMethod.Post, new { enctype = "multipart/form-data", id = "iAddEmployee" }))
                {
                    @Html.ValidationSummary()
                    <div class="mb-3">
                        @Html.Kendo().TextBoxFor(model => model.Employee.FirstName).HtmlAttributes(new { @class = "form-control" }).Label(l => l.Content("First Name"))
                        @Html.ValidationMessageFor(model => model.Employee.FirstName, "", new { @class="text-danger"})
                    </div>
                    <div class="mb-3">
                        @Html.Kendo().TextBoxFor(model => model.Employee.LastName).HtmlAttributes(new { @class = "form-control" }).Label(l => l.Content("Last Name"))
                        @Html.ValidationMessageFor(model => model.Employee.LastName, "", new { @class="text-danger"})
                    </div>
                    <div class="mb-3">
                        @Html.Kendo().TextBoxFor(model => model.Employee.Email).HtmlAttributes(new {@class = "form-control", type="email"}).Label(l => l.Content("Email"))
                        @Html.ValidationMessageFor(model => model.Employee.Email, "", new { @class="text-danger"})
                    </div>
                    <div class="mb-3">
                        @Html.Kendo().DatePickerFor(model => model.Employee.DateOfBrith).HtmlAttributes(new { @class = "form-control"}).Label(l => l.Content("Date of Birth"))
                        @Html.ValidationMessageFor(model => model.Employee.DateOfBrith, "", new { @class="text-danger"})
                    </div>
                    <div class="mb-3">
                        @(Html.Kendo().DropDownListFor(model => model.Employee.DepartmentId)
                            .DataTextField("Text")
                            .DataValueField("Value")
                            .HtmlAttributes(new { @class = "form-control" })
                            .OptionLabel("Select a Department")
                            .Label(l => l.Content("Department"))
                            .BindTo(Model.AllDepartment.Select(x => new SelectListItem { Text = x.DepartmentName, Value = x.DepartmentId.ToString() }))
                            )
                        @Html.ValidationMessageFor(model => model.Employee.DepartmentId, "", new { @class="text-danger"})
                    </div>
                    <div class="mb-3">
                        @Html.LabelFor(model=> model.Employee.PhotoPath, new {@for="IAddPhoto"})
                        <input type="file" class="form-control" id="IAddPhoto" name="PhotoPath" required>
                        <img id="IPhotoDisplay" style="height:100px" />
                    </div>

                    <div class="form-group">
                        @*@(
                    Html.Kendo().RadioGroupFor(model => model.Employee.Gender)
                    .LabelPosition(RadioGroupLabelPosition.After)
                    .Items(i =>
                    {
                    i.Add().Label("Male").Value(Gender.Male.ToString());
                    i.Add().Label("Female").Value(Gender.Female.ToString());
                    i.Add().Label("Other").Value(Gender.Other.ToString());
                    })
                    .Value("0")
                    .LabelPosition(RadioGroupLabelPosition.After)
                    )*@

                        @Html.LabelFor(model => model.Employee.Gender)
                        <label class="radio-inline">@Html.Kendo().RadioButtonFor(model => model.Employee.Gender).Value(Gender.Male) Female</label>
                        <label class="radio-inline">@Html.Kendo().RadioButtonFor(model => model.Employee.Gender).Value(Gender.Female) Male</label>
                        <label class="radio-inline">@Html.Kendo().RadioButtonFor(model => model.Employee.Gender).Value(Gender.Other) Other</label>
                        @Html.ValidationMessageFor(model => model.Employee.Gender, "", new { @class="text-danger"})
                    </div>
                    <button type="submit" class="btn btn-primary">Submit</button>
                }

            </div>
            <div class="modal-footer">
                @*<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>*@
                @*<button type="button" class="btn btn-primary">Save changes</button>*@
            </div>
        </div>
    </div>
</div>

<!-- Edit Modal-->


<div class="modal fade" id="@($"EditModel_")" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Edit Employee</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="IEditForm"></div>
            </div>
            <div class="modal-footer">
                @*<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>*@
                @*<button type="button" class="btn btn-primary">Save changes</button>*@
            </div>
        </div>
    </div>
</div>


@foreach (var item in Model.AllEmployees)
{

    <div class="modal fade" tabindex="-1" id="@($"DeleteModel_{item.EmployeeId}")">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Modal title</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure, you want to delete @($@"""{item.FirstName}""?")</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" onclick="deleteEmployee(@($"'{item.EmployeeId}'"))">Delete</button>
                </div>
            </div>
        </div>
    </div>

}



@(await Html.PartialAsync("_ValidationScriptsPartial"))
<script src="~/controller/employee/employee.js"></script>

<script>

    function onError(e) {
        debugger
        alert();
        console.log(e.status);
    }
</script>

